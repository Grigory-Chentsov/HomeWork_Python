""" Дана последовательность натуральных чисел (одно число в строке), завершающаяся числом 0.
Определите значение второго по величине элемента в этой последовательности, то есть элемента,
который будет наибольшим, если из последовательности удалить наибольший элемент.
В этой задаче нельзя использовать глобальные переменные. Функция получает данные, считывая их с клавиатуры,
а не получая их в виде параметра. В программе на языке Python функция возвращает результат в виде кортежа
из нескольких чисел и функция вообще не получает никаких параметров. В программе на языке C++
результат записывается в переменные, которые передаются в функцию по ссылке. Других параметров,
кроме как используемых для возврата значения, функция не получает.
Гарантируется, что последовательность содержит хотя бы два числа (кроме нуля).
1 3 5 7 3 6 8 4 3 2 0 -> 7
1 2 3 4 5 6 3 1 2 5 3 -> 5 """

# def second_max():
#     largest = 0
#     second_largest = 0
#     while True:
#         num = int(input("Ввод "))
#         if num == 0:
#             break
#         if num > largest:
#             second_largest = largest
#             largest = num
#         elif num > second_largest:
#             second_largest = num
#     return second_largest,
#
#
# print(*second_max())

""" Даны натуральные числа k и s. Определите, сколько существует k-значных натуральных чисел, 
сумма цифр которых равна s. Запись натурального числа не может начинаться с цифры 0.
В этой задаче можно использовать цикл для перебора всех цифр, стоящих на какой-либо позиции.
3 15 -> 69
4 16 -> 564
2 3 -> 3
6, 40 ->10746 """


def count_numbers(k, s, start=1):
    if k == 1:
        return int(s >= start and s <= 9)
    count = 0
    for i in range(start, 10):
            count += count_numbers(k - 1, s - i, 0)
    return count


k, s = map(int, input("Введите два числа: ").split())
print(count_numbers(k, s))
